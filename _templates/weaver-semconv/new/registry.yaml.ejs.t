---
to: semconv_registry/<%= registryFileName %>
---
# <%= domain.charAt(0).toUpperCase() + domain.slice(1) %> Semantic Conventions
# <%= description %>
#
# Version: <%= version %>
# Generated by: Weaver Hygen Templates

groups:
  - id: <%= domain.toLowerCase() %>
    prefix: <%= prefix %>
    type: attribute_group
    brief: <%= domain.charAt(0).toUpperCase() + domain.slice(1) %> telemetry attributes
    note: |
      These attributes provide standardized telemetry for <%= domain.toLowerCase() %> operations
      across the SwarmAgent ecosystem.
    attributes:
<% attributes.forEach(function(attr) { %>      - id: <%= attr %>
        type: string
        brief: <%= attr.charAt(0).toUpperCase() + attr.slice(1).replace(/_/g, ' ') %>
        note: |
          The <%= attr.replace(/_/g, ' ') %> associated with this operation.
        examples: 
          - "example_<%= attr %>"
          - "test_<%= attr %>"
        requirement_level: recommended
        
<% }); %>  
  - id: <%= domain.toLowerCase() %>_span
    prefix: <%= prefix %>
    type: span
    brief: <%= domain.charAt(0).toUpperCase() + domain.slice(1) %> operation span
    note: |
      Spans for <%= domain.toLowerCase() %> operations in the SwarmAgent ecosystem.
    attributes:
      - ref: <%= domain.toLowerCase() %>
      - id: span.kind
        type: string
        brief: Type of span operation
        examples: ["client", "server", "producer", "consumer", "internal"]
        requirement_level: required
      - id: operation.name
        type: string
        brief: Name of the operation being performed
        examples: ["process", "analyze", "validate"]
        requirement_level: required
      - id: operation.result
        type: string
        brief: Result status of the operation
        examples: ["success", "failure", "timeout"]
        requirement_level: recommended
<% if (has_metrics) { %>

  - id: <%= domain.toLowerCase() %>_metrics
    prefix: <%= prefix %>
    type: metric_group
    brief: <%= domain.charAt(0).toUpperCase() + domain.slice(1) %> metrics
    note: |
      Metrics for monitoring <%= domain.toLowerCase() %> operations.
    metrics:
<% metrics.forEach(function(metric) { %>      - id: <%= metric.split('.').pop() %>
        type: <% if (metric.includes('histogram')) { %>histogram<% } else if (metric.includes('gauge')) { %>gauge<% } else { %>counter<% } %>
        brief: <%= metric.split('.').map(w => w.charAt(0).toUpperCase() + w.slice(1)).join(' ') %>
        instrument: <%= metric %>
        unit: <% if (metric.includes('duration')) { %>ms<% } else if (metric.includes('total') || metric.includes('count')) { %>1<% } else { %>1<% } %>
        note: |
          Measures <%= metric.split('.').join(' ').replace(/_/g, ' ') %> in <%= domain.toLowerCase() %> operations.
        
<% }); %><% } %>
<% if (has_events) { %>

  - id: <%= domain.toLowerCase() %>_events
    prefix: <%= prefix %>
    type: event_group
    brief: <%= domain.charAt(0).toUpperCase() + domain.slice(1) %> events
    note: |
      Events emitted during <%= domain.toLowerCase() %> operations.
    events:
<% events.forEach(function(event) { %>      - id: <%= event.split('.').slice(-2).join('_') %>
        name: <%= event %>
        brief: <%= event.split('.').map(w => w.charAt(0).toUpperCase() + w.slice(1)).join(' ') %>
        note: |
          Emitted when <%= event.split('.').slice(-2).join(' ').replace(/_/g, ' ') %> occurs.
        attributes:
          - ref: <%= domain.toLowerCase() %>
          - id: event.timestamp
            type: int
            brief: Timestamp when event occurred
            requirement_level: required
        
<% }); %><% } %>

# SwarmAgent specific extensions
  - id: <%= domain.toLowerCase() %>_swarm
    prefix: swarm.<%= prefix %>
    type: attribute_group
    brief: SwarmAgent <%= domain.toLowerCase() %> attributes
    note: |
      SwarmAgent-specific attributes for <%= domain.toLowerCase() %> coordination.
    attributes:
      - id: agent.name
        type: string
        brief: Name of the SwarmAgent handling this operation
        examples: ["<%= domain.toLowerCase() %>_agent", "processor_agent"]
        requirement_level: required
      - id: agent.state
        type: string
        brief: Current state of the SwarmAgent
        examples: ["IDLE", "PROCESSING", "COMPLETE"]
        requirement_level: recommended
      - id: trigger.name
        type: string
        brief: Name of the trigger that activated this operation
        examples: ["start", "process", "complete"]
        requirement_level: recommended
      - id: workflow.id
        type: string
        brief: Identifier for the workflow this operation belongs to
        examples: ["workflow_123", "batch_456"]
        requirement_level: recommended
      - id: coordination.step
        type: int
        brief: Step number in multi-agent coordination
        examples: [1, 2, 3]
        requirement_level: optional

# Resource attributes
  - id: <%= domain.toLowerCase() %>_resource
    prefix: <%= prefix %>.resource
    type: resource
    brief: <%= domain.charAt(0).toUpperCase() + domain.slice(1) %> resource attributes
    note: |
      Resource-level attributes for <%= domain.toLowerCase() %> services.
    attributes:
      - id: service.name
        type: string
        brief: Name of the <%= domain.toLowerCase() %> service
        examples: ["<%= domain.toLowerCase() %>_processor", "<%= domain.toLowerCase() %>_api"]
        requirement_level: required
      - id: service.version
        type: string
        brief: Version of the <%= domain.toLowerCase() %> service
        examples: ["1.0.0", "2.1.3"]
        requirement_level: recommended
      - id: service.instance.id
        type: string
        brief: Instance identifier for the service
        examples: ["instance_001", "pod_abc123"]
        requirement_level: recommended