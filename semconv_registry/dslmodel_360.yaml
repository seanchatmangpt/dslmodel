groups:
  - id: dslmodel
    type: span
    brief: 'DSLModel framework semantic conventions with 360 permutations'
    prefix: dslmodel
    attributes:
      - id: model.type
        type:
          allow_custom_values: false
          members:
            - id: base
              value: 'base'
              brief: 'Base DSLModel'
            - id: fsm
              value: 'fsm'
              brief: 'FSM-enabled model'
            - id: workflow
              value: 'workflow'
              brief: 'Workflow model'
            - id: agent
              value: 'agent'
              brief: 'Agent model'
            - id: event
              value: 'event'
              brief: 'Event-driven model'
            - id: template
              value: 'template'
              brief: 'Template-based model'
        requirement_level: required
        brief: 'Type of DSLModel (6 types)'
        
      - id: mixin.combination
        type:
          allow_custom_values: false
          members:
            - id: none
              value: 'none'
              brief: 'No mixins'
            - id: jinja
              value: 'jinja'
              brief: 'JinjaMixin only'
            - id: tool
              value: 'tool'
              brief: 'ToolMixin only'
            - id: file
              value: 'file'
              brief: 'FileHandlerMixin only'
            - id: jinja_tool
              value: 'jinja_tool'
              brief: 'Jinja + Tool mixins'
            - id: jinja_file
              value: 'jinja_file'
              brief: 'Jinja + FileHandler mixins'
            - id: tool_file
              value: 'tool_file'
              brief: 'Tool + FileHandler mixins'
            - id: all
              value: 'all'
              brief: 'All mixins combined'
            - id: fsm_jinja
              value: 'fsm_jinja'
              brief: 'FSM + Jinja mixins'
            - id: fsm_tool
              value: 'fsm_tool'
              brief: 'FSM + Tool mixins'
        requirement_level: required
        brief: 'Mixin combination pattern (10 combinations)'
        
      - id: generation.source
        type:
          allow_custom_values: false
          members:
            - id: prompt
              value: 'prompt'
              brief: 'Generated from natural language prompt'
            - id: schema
              value: 'schema'
              brief: 'Generated from JSON/YAML schema'
            - id: api
              value: 'api'
              brief: 'Generated from API specification'
            - id: template
              value: 'template'
              brief: 'Generated from template'
            - id: weaver
              value: 'weaver'
              brief: 'Generated by Weaver Forge'
            - id: manual
              value: 'manual'
              brief: 'Manually created'
        requirement_level: required
        brief: 'Source of model generation (6 sources)'
        
      - id: validation.enabled
        type: boolean
        requirement_level: required
        brief: 'Whether Pydantic validation is enabled'
        
      - id: model.name
        type: string
        requirement_level: required
        brief: 'Name of the generated model'
        examples: ['UserModel', 'WorkflowModel', 'AgentModel']
        
      - id: field.count
        type: int
        requirement_level: recommended
        brief: 'Number of fields in the model'
        
      - id: generation.duration_ms
        type: int
        requirement_level: recommended
        brief: 'Time taken to generate model in milliseconds'
        
      - id: llm.provider
        type: 
          allow_custom_values: true
          members:
            - id: openai
              value: 'openai'
              brief: 'OpenAI GPT models'
            - id: groq
              value: 'groq'
              brief: 'Groq LLM'
            - id: ollama
              value: 'ollama'
              brief: 'Ollama local models'
            - id: anthropic
              value: 'anthropic'
              brief: 'Anthropic Claude'
        requirement_level: conditional
        brief: 'LLM provider used for generation'
        note: 'Specifies which LLM provider was used during model generation'
        
      - id: template.engine
        type:
          allow_custom_values: false
          members:
            - id: jinja2
              value: 'jinja2'
              brief: 'Jinja2 template engine'
            - id: mako
              value: 'mako'
              brief: 'Mako template engine'
            - id: custom
              value: 'custom'
              brief: 'Custom template engine'
        requirement_level: conditional
        brief: 'Template engine used'
        note: 'Specifies which template engine was used for generation'
        
      - id: output.format
        type:
          allow_custom_values: false
          members:
            - id: python
              value: 'python'
              brief: 'Python class output'
            - id: json_schema
              value: 'json_schema'
              brief: 'JSON Schema output'
            - id: typescript
              value: 'typescript'
              brief: 'TypeScript interface'
            - id: yaml
              value: 'yaml'
              brief: 'YAML schema'
            - id: proto
              value: 'proto'
              brief: 'Protocol Buffers'
        requirement_level: recommended
        brief: 'Output format of generated model'
        note: 'Specifies the output format for the generated model'

  - id: dslmodel.operations
    type: span
    brief: 'DSLModel operation spans'
    span_kind: internal
    attributes:
      - ref: dslmodel.model.type
        requirement_level: required
      - ref: dslmodel.model.name
        requirement_level: required
      - id: operation.type
        type:
          allow_custom_values: false
          members:
            - id: generate
              value: 'generate'
              brief: 'Model generation'
            - id: validate
              value: 'validate'
              brief: 'Model validation'
            - id: transform
              value: 'transform'
              brief: 'Model transformation'
            - id: serialize
              value: 'serialize'
              brief: 'Model serialization'
        requirement_level: required
        brief: 'Type of operation performed'

  - id: dslmodel.metrics
    type: metric
    brief: 'DSLModel metrics'
    attributes:
      - ref: dslmodel.model.type
      - ref: dslmodel.mixin.combination
      - ref: dslmodel.generation.source
      - ref: dslmodel.output.format