"""
Generated OpenTelemetry Models

This module contains Pydantic models generated from OpenTelemetry semantic conventions.
Generated by Weaver Forge.
"""
from typing import List, Optional, Union, Literal
from pydantic import BaseModel, Field

from dslmodel import DSLModel


class DslmodelAttributes(DSLModel):
    """
    DSLModel workflow execution attributes
    
    """
    
    
    
    
    
    
    
    
    
    workflow_name: str = Field(
        ...,
        description="Name of the DSL workflow being executed",
        
        json_schema_extra={
            "examples": ["user-registration", "payment-processing"],
        }
        
    )
    
    
    
    
    
    
    
    
    
    workflow_status: Literal["started", "completed", "failed"] = Field(
        ...,
        description="Current status of the workflow execution",
        
    )
    
    
    
    
    
    
    
    
    
    
    workflow_duration_ms: Optional[int] = Field(
        None,
        description="Duration of workflow execution in milliseconds",
        
        json_schema_extra={
            "examples": [150, 2500],
        }
        
    )
    
    
    
    
    
    
    
    
    
    
    model_type: Optional[str] = Field(
        None,
        description="Type of DSL model being used",
        
        json_schema_extra={
            "examples": ["pydantic", "dataclass", "custom"],
        }
        
    )
    
    
    class Config:
        use_enum_values = True
        extra = "forbid"
        
    @classmethod
    def otel_namespace(cls) -> str:
        """Return the OpenTelemetry namespace for this attribute group."""
        return "dslmodel"
