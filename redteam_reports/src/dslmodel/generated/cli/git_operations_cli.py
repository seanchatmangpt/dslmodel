"""
Git_operations CLI - Auto-generated from semantic convention
Generated by WeaverEngine - DO NOT EDIT MANUALLY
"""

import typer
from typing import Optional
from loguru import logger
from pathlib import Path

from ..models.git_operations import *

app = typer.Typer(help="Git_operations commands")

@app.command("git")
def git_command(
    operation: str = typer.Argument(..., help="Git operation being performed"),
    repository: Optional[str] = typer.Option(None, help="Repository path"),
    branch: Optional[str] = typer.Option(None, help="Branch name"),
    ref: Optional[str] = typer.Option(None, help="Git reference"),
    sha: Optional[str] = typer.Option(None, help="Git SHA hash"),
    remote: Optional[str] = typer.Option(None, help="Remote repository name"),
    error_code: Optional[str] = typer.Option(None, help="Git error code if operation failed"),
):
    """Git operations instrumentation"""
    
    # Create model instance
    model = Git(
        operation=operation,
        repository=repository,
        branch=branch,
        ref=ref,
        sha=sha,
        remote=remote,
        error_code=error_code,
    )
    
    # Emit telemetry
    trace_id = model.emit_telemetry()
    
    logger.success(f"âœ… git executed successfully!")
    logger.info(f"ðŸ“Š Trace ID: {trace_id}")
    
    return model.model_dump()


if __name__ == "__main__":
    app()