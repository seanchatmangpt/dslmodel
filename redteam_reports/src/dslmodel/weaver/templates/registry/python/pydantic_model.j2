{#- Template for generating Pydantic models from OpenTelemetry semantic conventions -#}
"""
Generated OpenTelemetry Models

This module contains Pydantic models generated from OpenTelemetry semantic conventions.
Generated by Weaver Forge.
"""
from typing import List, Optional, Union, Literal
from pydantic import BaseModel, Field

from dslmodel import DSLModel

{% for group in ctx.groups if group.type == "attribute_group" %}
class {{ group.id | pascal_case }}Attributes(DSLModel):
    """
    {{ group.brief }}
    {% if group.note %}
    
    Note: {{ group.note }}
    {% endif %}
    """
    
    {% for attribute in group.attributes | default([]) %}
    {% set field_name = attribute.name | replace("dslmodel.", "") | replace(".", "_") %}
    {% if attribute.type == "string" %}
    {% set field_type = "str" %}
    {% elif attribute.type == "int" %}
    {% set field_type = "int" %}
    {% elif attribute.type == "double" %}
    {% set field_type = "float" %}
    {% elif attribute.type == "boolean" %}
    {% set field_type = "bool" %}
    {% elif attribute.type.members is defined %}
    {% set enum_values = attribute.type.members | map(attribute="value") | map("tojson") | join(", ") %}
    {% set field_type = "Literal[" + enum_values + "]" %}
    {% else %}
    {% set field_type = "str" %}
    {% endif %}
    
    {% if attribute.requirement_level != "required" %}
    {% set field_type = "Optional[" + field_type + "]" %}
    {% endif %}
    
    {{ field_name }}: {{ field_type }} = Field(
        {% if attribute.requirement_level == "required" %}...{% else %}None{% endif %},
        description="{{ attribute.brief }}",
        {% if attribute.examples %}
        json_schema_extra={
            "examples": {{ attribute.examples }},
        }
        {% endif %}
    )
    {% endfor %}
    
    class Config:
        use_enum_values = True
        extra = "forbid"
        
    @classmethod
    def otel_namespace(cls) -> str:
        """Return the OpenTelemetry namespace for this attribute group."""
        return "{{ group.id }}"
{% endfor %}