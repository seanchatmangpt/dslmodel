# {{ convention_name|title }}

**Auto-generated from semantic convention** - Last updated: {{ "now"|strftime("%Y-%m-%d %H:%M") }}

## Overview

{% if groups %}
{% for group in groups %}
{% if group.brief %}
{{ group.brief }}
{% endif %}
{% endfor %}
{% endif %}

## Telemetry Spans

{% for group in groups %}
{% if group.type == 'span' %}
### {{ group.id }}

**Type:** {{ group.type }}  
**Brief:** {{ group.brief or 'No description' }}

#### Attributes

| Attribute | Type | Required | Description |
|-----------|------|----------|-------------|
{% for attr in group.attributes %}
| `{{ attr.id }}` | {{ attr.type }} | {{ attr.requirement_level }} | {{ attr.brief or 'No description' }} |
{% endfor %}

#### Example Usage

```python
from dslmodel.generated.models.{{ convention_name }} import {{ group.id|replace('.', '_')|replace('-', '_')|title }}

# Create model
model = {{ group.id|replace('.', '_')|replace('-', '_')|title }}(
    {% for attr in group.attributes %}
    {% if attr.requirement_level == 'required' %}
    {{ attr.id|replace('.', '_') }}="example_value",
    {% endif %}
    {% endfor %}
)

# Emit telemetry
trace_id = model.emit_telemetry()
print(f"Telemetry emitted: {trace_id}")
```

#### CLI Usage

```bash
dsl {{ convention_name|replace('_', '-') }} {{ group.id|replace('.', '-')|replace('_', '-') }} \
    {% for attr in group.attributes %}
    {% if attr.requirement_level == 'required' %}
    --{{ attr.id|replace('.', '-')|replace('_', '-') }} "value" \
    {% endif %}
    {% endfor %}
```

{% endif %}
{% endfor %}

## Validation

All generated code includes automatic validation:

- ✅ Type safety through Pydantic models
- ✅ Required attribute validation
- ✅ OpenTelemetry span emission
- ✅ Comprehensive test coverage

## Files Generated

- `models/{{ convention_name }}.py` - Pydantic models
- `cli/{{ convention_name }}_cli.py` - CLI commands  
- `tests/test_{{ convention_name }}.py` - Test suite
- `docs/{{ convention_name }}.md` - This documentation

---

*Generated by WeaverEngine from semantic convention `{{ convention_name }}.yaml`*
