{#- Template for generating metric dataclasses from OpenTelemetry semantic conventions -#}
"""
Generated OpenTelemetry Metrics

This module contains dataclasses for metrics from OpenTelemetry semantic conventions.
Generated by Weaver Forge.
"""
from dataclasses import dataclass, field
from typing import Dict, Any, Optional
from enum import Enum


class MetricInstrument(str, Enum):
    """OpenTelemetry metric instrument types."""
    COUNTER = "counter"
    GAUGE = "gauge"
    HISTOGRAM = "histogram"
    UP_DOWN_COUNTER = "updowncounter"


@dataclass
class MetricDefinition:
    """Base class for metric definitions."""
    name: str
    brief: str
    instrument: str
    unit: str = "1"
    attributes: Dict[str, Any] = field(default_factory=dict)


# Metrics generated from semantic conventions
{% for group in ctx.groups %}
{% if group.type == "metric" %}
@dataclass
class {{ group.id | replace(".", "_") | pascal_case }}Metric(MetricDefinition):
    """
    {{ group.brief }}
    """
    def __post_init__(self):
        self.name = "{{ group.metric_name }}"
        self.brief = "{{ group.brief }}"
        self.instrument = "{{ group.instrument }}"
        self.unit = "{{ group.unit | default('1') }}"
{% endif %}
{% endfor %}