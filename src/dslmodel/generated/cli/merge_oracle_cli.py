"""
Merge_oracle CLI - Auto-generated from semantic convention
Generated by WeaverEngine - DO NOT EDIT MANUALLY
"""

import typer
from typing import Optional
from loguru import logger
from pathlib import Path

from ..models.merge_oracle import *

app = typer.Typer(help="Merge_oracle commands")

@app.command("merge-oracle")
def merge_oracle_command(
    motion_id: str = typer.Argument(..., help="Motion identifier being decided"),
    decision_outcome: Optional[str] = typer.Option(None, help="Decision outcome"),
    decision_confidence: Optional[str] = typer.Option(None, help="Confidence level of the decision"),
    decision_factors: Optional[str] = typer.Option(None, help="Factors considered in decision"),
    merge_type: Optional[str] = typer.Option(None, help="Type of merge operation"),
    merge_conflicts: Optional[str] = typer.Option(None, help="Number of merge conflicts"),
):
    """Merge oracle decision system for Git parliament"""
    
    # Create model instance
    model = Merge_oracle(
        motion_id=motion_id,
        decision_outcome=decision_outcome,
        decision_confidence=decision_confidence,
        decision_factors=decision_factors,
        merge_type=merge_type,
        merge_conflicts=merge_conflicts,
    )
    
    # Emit telemetry
    trace_id = model.emit_telemetry()
    
    logger.success(f"âœ… merge_oracle executed successfully!")
    logger.info(f"ðŸ“Š Trace ID: {trace_id}")
    
    return model.model_dump()


if __name__ == "__main__":
    app()