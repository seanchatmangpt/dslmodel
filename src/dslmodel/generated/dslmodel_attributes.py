"""
Generated OpenTelemetry Models

This module contains Pydantic models generated from OpenTelemetry semantic conventions.
Generated by Weaver Forge.
"""
from typing import List, Optional, Union, Literal
from pydantic import BaseModel, Field

from dslmodel import DSLModel


class ClaudeCodeAttributes(DSLModel):
    """
    Base attributes for Claude Code tool telemetry
    
    """
    
    
    
    
    
    
    
    
    
    claude_code_tool_name: str = Field(
        ...,
        description="Name of the Claude Code tool being used",
        
        json_schema_extra={
            "examples": ["Read", "Write", "Bash", "Grep", "WebFetch", "Task", "TodoWrite"],
        }
        
    )
    
    
    
    
    
    
    
    
    claude_code_tool_category: str = Field(
        ...,
        description="Category of Claude Code tool",
        
        json_schema_extra={
            "examples": ["file", "bash", "search", "web", "agent", "todo", "notebook"],
        }
        
    )
    
    
    
    
    
    
    
    
    
    
    claude_code_session_id: Optional[str] = Field(
        None,
        description="Unique identifier for the Claude Code session",
        
        json_schema_extra={
            "examples": ["session_1234567890"],
        }
        
    )
    
    
    
    
    
    
    
    
    
    
    claude_code_user_request: Optional[str] = Field(
        None,
        description="The original request from the user that triggered the tool use",
        
        json_schema_extra={
            "examples": ["Read the main.py file", "Run tests", "Search for TODO comments"],
        }
        
    )
    
    
    class Config:
        use_enum_values = True
        extra = "forbid"
        
    @classmethod
    def otel_namespace(cls) -> str:
        """Return the OpenTelemetry namespace for this attribute group."""
        return "claude_code"
