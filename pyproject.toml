[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "dslmodel"
version = "2024.12.22.2"
description = "Pydantic + DSPy instances from prompts and Jinja."
authors = [{ name = "Sean Chatman", email = "info@chatmangpt.com" }]
readme = "README.md"
requires-python = ">=3.12,<4.0"
dependencies = [
  "aiofiles>=24.1.0",
  "apscheduler>=3.11.0",
  "coloredlogs>=15.0.1",
  "dspy>=2.6.24",
  "dspy-ai>=2.6.24",
  "factory-boy>=3.3.3",
  "hypothesis>=6.131.18",
  "ijson>=3.4.0",
  "inflection>=0.5.1",
  "inject>=5.2.1",
  "injector>=0.22.0",
  "jinja2-ext>=0.1",
  "jinja2-time>=0.2.0",
  "jupyter>=1.1.1",
  "loguru>=0.7.3",
  "mcp>=1.9.0",
  "munch>=4.0.0",
  "nest-asyncio>=1.6.0",
  "pandasql>=0.7.3",
  "poethepoet>=0.34.0",
  "pygithub>=2.6.1",
  "pyperclip>=1.9.0",
  "python-socketio[asyncio-client]>=5.13.0",
  "reactivex>=4.0.4",
  "toml>=0.10.2",
  "transitions>=0.9.2",
  "cloudpickle>=3.1.1",
  "pydantic-ai>=0.2.4",
  "wcmatch>=10.0",
  "typer>=0.15.4",
  "makefun>=1.16.0",
  "email-validator>=2.1.0.post1",
]

[project.urls]
repository = "https://github.com/seanchatmangpt/dslmodel"

[project.optional-dependencies]
test = [
  "coverage[toml]>=7.8.0",
  "pytest>=8.3.5",
  "pytest-mock>=3.14.0",
  "pytest-xdist>=3.6.1",
  "pytest-watch>=4.2.0",
  "pytest-asyncio>=0.26.0",
  "hypothesis>=6.131.18",
  "fastapi>=0.115.12",
]
dev = [
  "cruft>=2.16.0",
  "ipykernel>=6.29.5",
  "ipython>=9.2.0",
  "ipywidgets>=8.1.7",
  "pdoc>=15.0.3",
]

[project.scripts]
dsl = "dslmodel.cli:app"
jygen = "jygen.cli:app"

[tool.coverage.report]
precision = 1
show_missing = true
skip_covered = true

[tool.coverage.run]
branch = true
command_line = "--module pytest"
data_file = "reports/.coverage"
source = ["src"]

[tool.coverage.xml]
output = "reports/coverage.xml"

[tool.pytest.ini_options]
addopts = "--color=yes --doctest-modules --exitfirst --failed-first --verbosity=2 --junitxml=reports/pytest.xml"
testpaths = ["src", "tests"]
xfail_strict = true

[tool.poe.tasks]
push = "act push --container-architecture linux/amd64 --secret-file .secrets"
pub = "python -m build && python -m twine upload dist/*"
pipe = "pip install -e ."

[tool.poe.tasks.api]
help = "Serve the REST API"
shell = """
    if [ $dev ]
    then {
      uvicorn \
        --host $host \
        --port $port \
        --reload \
        dslmodel.api:app
    } else {
      gunicorn \
        --access-logfile - \
        --bind $host:$port \
        --graceful-timeout 10 \
        --keep-alive 10 \
        --log-file - \
        --timeout 30 \
        --worker-class uvicorn.workers.UvicornWorker \
        --worker-tmp-dir /dev/shm \
        --workers 2 \
        dslmodel.api:app
    } fi
    """

[[tool.poe.tasks.api.args]]
help = "Bind socket to this host (default: 0.0.0.0)"
name = "host"
options = ["--host"]
default = "0.0.0.0"

[[tool.poe.tasks.api.args]]
help = "Bind socket to this port (default: 8000)"
name = "port"
options = ["--port"]
default = "8000"

[[tool.poe.tasks.api.args]]
help = "Enable development mode"
type = "boolean"
name = "dev"
options = ["--dev"]

[tool.poe.tasks.docs]
help = "Generate this app's docs"
cmd = """
    pdoc
      --docformat $docformat
      --output-directory $outputdirectory
      dslmodel
    """

[[tool.poe.tasks.docs.args]]
help = "The docstring style (default: numpy)"
name = "docformat"
options = ["--docformat"]
default = "numpy"

[[tool.poe.tasks.docs.args]]
help = "The output directory (default: docs)"
name = "outputdirectory"
options = ["--output-directory"]
default = "docs"

[tool.poe.tasks.test]
help = "Test this app"

[[tool.poe.tasks.test.sequence]]
cmd = "coverage run"

[[tool.poe.tasks.test.sequence]]
cmd = "coverage report"

[[tool.poe.tasks.test.sequence]]
cmd = "coverage xml"

[tool.poe.tasks.test-watch]
help = "Watch for changes and rerun tests"
cmd = """ptw --onfail="notify-send 'Tests failed!'" --clear --runner="pytest --tb=short --maxfail=1 --color=yes --doctest-modules --junitxml=reports/pytest.xml --failed-first --exitfirst --verbosity=2" """

[dependency-groups]
dev = [
    "coverage[toml]>=7.8.0",
    "fastapi>=0.115.12",
    "hypothesis>=6.131.18",
    "pytest>=8.3.5",
    "pytest-asyncio>=0.26.0",
    "pytest-cov>=6.1.1",
    "pytest-mock>=3.14.0",
    "pytest-watch>=4.2.0",
    "pytest-xdist>=3.6.1",
]
