"""
Generated OpenTelemetry Metrics

This module contains dataclasses for metrics from OpenTelemetry semantic conventions.
Generated by Weaver Forge.
"""
from dataclasses import dataclass, field
from typing import Dict, Any, Optional
from enum import Enum


class MetricInstrument(str, Enum):
    """OpenTelemetry metric instrument types."""
    COUNTER = "counter"
    GAUGE = "gauge"
    HISTOGRAM = "histogram"
    UP_DOWN_COUNTER = "updowncounter"


@dataclass
class MetricDefinition:
    """Base class for metric definitions."""
    name: str
    brief: str
    instrument: str
    unit: str = "1"
    attributes: Dict[str, Any] = field(default_factory=dict)


# Metrics generated from semantic conventions




@dataclass
class DslmodelMetricsMetric(MetricDefinition):
    """
    Measures the duration of DSL workflow executions
    """
    def __post_init__(self):
        self.name = "dslmodel.workflow.duration"
        self.brief = "Measures the duration of DSL workflow executions"
        self.instrument = "histogram"
        self.unit = "ms"

